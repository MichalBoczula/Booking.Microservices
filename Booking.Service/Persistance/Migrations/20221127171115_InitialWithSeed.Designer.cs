// <auto-generated />
using Booking.Service.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking.Service.Persistance.Migrations
{
    [DbContext(typeof(BookingServiceDbContext))]
    [Migration("20221127171115_InitialWithSeed")]
    partial class InitialWithSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Booking.Service.Domain.Dictionaries.PaymentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Accepted"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Declined"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Waiting"
                        });
                });

            modelBuilder.Entity("Booking.Service.Domain.Dictionaries.TermStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TermStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Booked"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Free"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Reserved"
                        });
                });

            modelBuilder.Entity("Booking.Service.Domain.Entities.AvailableTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("TermStatusId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("TermStatusId");

                    b.ToTable("AvailableTerms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HotelId = 1,
                            Month = 1,
                            TermStatusId = 1,
                            Year = 2023
                        },
                        new
                        {
                            Id = 2,
                            HotelId = 1,
                            Month = 2,
                            TermStatusId = 1,
                            Year = 2023
                        },
                        new
                        {
                            Id = 3,
                            HotelId = 2,
                            Month = 1,
                            TermStatusId = 1,
                            Year = 2023
                        },
                        new
                        {
                            Id = 4,
                            HotelId = 2,
                            Month = 2,
                            TermStatusId = 1,
                            Year = 2023
                        },
                        new
                        {
                            Id = 5,
                            HotelId = 3,
                            Month = 1,
                            TermStatusId = 1,
                            Year = 2023
                        },
                        new
                        {
                            Id = 6,
                            HotelId = 3,
                            Month = 2,
                            TermStatusId = 1,
                            Year = 2023
                        });
                });

            modelBuilder.Entity("Booking.Service.Domain.Entities.BookedTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvailableTermId")
                        .HasColumnType("int");

                    b.Property<string>("OrderIntegrationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvailableTermId")
                        .IsUnique();

                    b.HasIndex("PaymentStatusId");

                    b.ToTable("BookedTerms");
                });

            modelBuilder.Entity("Booking.Service.Domain.Entities.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "President"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bro"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Island"
                        });
                });

            modelBuilder.Entity("Booking.Service.Domain.Entities.AvailableTerm", b =>
                {
                    b.HasOne("Booking.Service.Domain.Entities.Hotel", "HotelRef")
                        .WithMany("AvailableTerms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Booking.Service.Domain.Dictionaries.TermStatus", "TermStatusRef")
                        .WithMany("AvailableTerms")
                        .HasForeignKey("TermStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotelRef");

                    b.Navigation("TermStatusRef");
                });

            modelBuilder.Entity("Booking.Service.Domain.Entities.BookedTerm", b =>
                {
                    b.HasOne("Booking.Service.Domain.Entities.AvailableTerm", "AvailableTermRef")
                        .WithOne("BookedTermRef")
                        .HasForeignKey("Booking.Service.Domain.Entities.BookedTerm", "AvailableTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Booking.Service.Domain.Dictionaries.PaymentStatus", "PaymentStatusRef")
                        .WithMany("BookedTerms")
                        .HasForeignKey("PaymentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AvailableTermRef");

                    b.Navigation("PaymentStatusRef");
                });

            modelBuilder.Entity("Booking.Service.Domain.Dictionaries.PaymentStatus", b =>
                {
                    b.Navigation("BookedTerms");
                });

            modelBuilder.Entity("Booking.Service.Domain.Dictionaries.TermStatus", b =>
                {
                    b.Navigation("AvailableTerms");
                });

            modelBuilder.Entity("Booking.Service.Domain.Entities.AvailableTerm", b =>
                {
                    b.Navigation("BookedTermRef");
                });

            modelBuilder.Entity("Booking.Service.Domain.Entities.Hotel", b =>
                {
                    b.Navigation("AvailableTerms");
                });
#pragma warning restore 612, 618
        }
    }
}
